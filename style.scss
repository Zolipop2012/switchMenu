$light-grey: #6a6367;
$lighter-white: #fffdfc;
$slate-grey: #eeeeee;
$teal-outline: #3db4ad;
$lightest-teal-outline: #6adcd0;

body {
  display: flex;
  height: 100vh;
  margin: auto 2rem;
  font-family: "Roboto", sans-serif;
  color: #333;
}

.main {
  display: flex;
  width: fit-content;
  margin: auto;
  transform-origin: left;
}

.console-wrapper {
  padding: 15px 20px;
  background: #2f2f32;
}

.screen-border {
  width: fit-content;
  padding: 20px 40px;
  background: #000;
  border-radius: 20px;
}

.screen-footer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-top: 1px solid #333;
  height: 50px;
  width: 100%;
  padding: 15px 0;
}

.screen-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 0.5rem;
  margin-bottom: 1rem;
  letter-spacing: 2px;
}

.screen-wrapper {
  padding: 1rem 1.5rem;
  border: 1px solid #333;
  width: 100%;
  max-width: 60rem;
  background: $slate-grey;
  margin: auto;
}

.grid-wrapper {
  display: grid;
  align-items: center;
  padding-top: 2rem;
  padding-bottom: 2rem;
  padding-left: 1rem;
  margin-left: 2rem;
  width: calc(100% - 1.5rem);
  height: 220px;
  grid-template-columns: repeat(auto-fill, 200px);
  column-gap: 15px;
  grid-auto-flow: column;
  overflow-y: scroll;
}

.grid {
  position: relative;
  height: 200px;
  width: 200px;
  border: 3px solid $lighter-white;
  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.05);

  &.is-highlighted {
    outline: 5px solid $teal-outline;

    .game-name {
      display: block;
    }
  }

  .game-name {
    content: attr(data-game-name);
    position: absolute;
    display: none;
    top: -36px;
    right: 25%;
    height: 30px;
    min-width: 100%;
    max-width: 320px;
    white-space: nowrap;
    text-align: center;
    color: #0885a5;
    text-shadow: 1px 1px 2px #0885a554;
    font-size: 1.25rem;
    transform: translateX(25%);
  }

  .game-placeholder {
    background: $slate-grey;
    padding-bottom: 100%;
  }

  .game {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  &:last-child {
    margin-right: 2rem;
  }
}

.bubble-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  gap: 20px;
  padding-top: 20px;
  padding-bottom: 30px;
}

.bubble {
  display: flex;
  position: relative;
  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.1);
  border-radius: 50%;
  height: 65px;
  width: 65px;
  background: $lighter-white;

  &.is-highlighted {
    outline: 4px solid $teal-outline;

    .bubble-title {
      display: block;
    }
  }

  &-title {
    display: none;
    position: absolute;
    width: 130px; // twice the size of bubble width
    bottom: -25px;
    left: -50%;
    white-space: nowrap;
    text-align: center;
    color: #0885a5;
    text-shadow: 1px 1px 2px #0885a554;
    font-size: 18px;
  }

  .icon {
    display: block;
    margin: auto;
    font-size: 32px;
  }
}

.toolbar {
  font-size: 25px;
}

.toolbar * {
  margin: 0 10px;
}

.user-icon {
  display: flex;
  justify-content: flex-start;
  width: 80%;
  border: 4px solid $lighter-white;
  background-color: #0885a5;
  height: 60px;
  border-radius: 60px;
  width: 60px;
  overflow: hidden;

  &.is-highlighted {
    border-color: $teal-outline;
  }

  img {
    padding: 2px;
  }
}

.button-prompts {
  width: 100%;
  display: flex;
  justify-content: flex-end;
  transform: translateX(-2%);
  align-items: center;
}

.button-prompts * {
  margin: 0 70px;
}

.options {
  position: relative;
  height: 30px;
  border: 1px solid #333;
  width: 30px;
  border-radius: 30px;
  font-size: 25px;
}

.options::before {
  content: attr(data-button);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.options::after {
  content: attr(data-action);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(35%, -50%);
}

.fa-newspaper {
  color: #d54f53;
}

.fa-shopping-bag {
  color: #f7a21e;
}

.fa-image {
  color: #276bda;
}

.fa-power-off {
  color: $light-grey;
}

.fa-cog {
  color: $light-grey;
}

.fa-mobile-alt {
  color: $light-grey;
}

.start::after {
  left: 90%;
}

.gamepad {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  height: 100%;
  width: 20%;
  font-size: 50px;
  padding-left: 20px;
}

.controller {
  box-sizing: border-box;
  position: relative;
  width: 150px;
}

.left-controller {
  background-color: #d5f35a;
  border-radius: 125px 0 0 125px;

  .analog-buttons {
    left: 9%;
    top: 50%;
  }
}

.right-controller {
  background-color: #aa2eb2;
  border-radius: 0 125px 125px 0;

  .analog-buttons {
    right: 9%;
    top: 20%;
  }
}

$analog-button-pad-width: 125px;
$analog-button-width: calc(#{$analog-button-pad-width} / 3);
$analog-button-margin: calc(#{$analog-button-pad-width} / 20);
$btn-alpha-font-size: calc(#{$analog-button-pad-width} / 4.5);

.analog-buttons {
  display: flex;
  flex-direction: column;
  position: absolute;
  width: $analog-button-pad-width;

  .top-row,
  .bottom-row {
    margin: 0 auto;
  }

  .middle-row {
    display: flex;
    justify-content: space-between;
    margin: 5px 0;
  }
}

.analog-button {
  position: relative;
  background-color: #000;
  width: $analog-button-width;
  height: $analog-button-width;
  border-radius: 50%;
  box-shadow: 2px 4px 0px #000;

  &::after {
    content: attr(data-analog-button);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  &:active {
    box-shadow: 2px 2px 0px #000;
    top: 2px;
  }
}

.btn-alpha {
  &::after {
    top: 53%;
    font-size: $btn-alpha-font-size;
    color: $slate-grey;
  }
}

.directional-arrow {
  &::after {
    font-size: $btn-alpha-font-size;
    color: #333;
  }

  // hacky solution to align the left and right arrow button icons
  .middle-row &:first-child {
    &::after {
      transform: translate(-60%, -50%);
    }
  }

  .middle-row &:last-child {
    &::after {
      transform: translate(-40%, -45%);
    }
  }
}

.control-stick-wrapper {
  position: absolute;
  display: inline-block;
  left: -9%;
  padding: 40px;
  opacity: 1;
  box-sizing: border-box;

  .left-controller & {
    top: 15%;
  }

  .right-controller & {
    top: 44.5%;
  }
}

.control-stick-base {
  width: 105px;
  height: 105px;
  background-color: #000;
  border-radius: 50%;
}

.control-stick {
  position: absolute;
  width: 90px;
  height: 90px;
  background-color: #333;
  border-radius: 50%;
  box-sizing: border-box;
  pointer-events: none;
  transition: 0.5s;
}

.control-stick-inner {
  position: absolute;
  left: 8%;
  top: 8%;
  width: 75px;
  height: 75px;
  background-color: #000;
  border-radius: 50%;
}

.start-select-btn {
  position: absolute;
  top: 8%;
  background-color: #000;
  width: 30px;
  height: 6px;
  box-shadow: 1px 4px 0px #000;

  &:active {
    box-shadow: 1px 2px 0px #000;
    top: calc(8% + 2px);
  }

  .left-controller & {
    left: 70%;
  }

  .right-controller & {
    right: 70%;

    &::before {
      content: "";
      position: absolute;
      top: -12px;
      left: 11px;
      width: 6px;
      height: 30px;
      background-color: #000;
      box-shadow: 0px 2px 0px #000;
    }
  }
}

.misc-controller-btns {
  position: absolute;
  bottom: 20%;
  background-color: #000;

  .right-controller & {
    right: 50%;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    border: 6px solid #333;
    box-shadow: 1px 1px 0px 0px #333;
    font-size: 20px;

    .fa-home {
      color: #333;
    }

    &:active {
      box-shadow: 0px 0px 0px 0px #333;
      bottom: calc(20% - 2px);
    }
  }

  .left-controller & {
    padding: 12.5px;
    left: 60%;
    box-shadow: inset -1px -1px 0px 0px #333;

    &:active {
      box-shadow: inset 0px 0px 0px 0px #333;
      bottom: calc(20% - 2px);
    }

    &::before {
      content: "";
      position: absolute;
      top: calc(50% - 1px); // -1px value from box-shadow
      left: calc(50% - 1px);
      width: 20px;
      height: 20px;
      transform: translate(-50%, -50%);
      border-radius: 50%;
      background-color: #333;

      &:active {
        top: calc(50% - 2px);
      }
    }
  }
}

.is-clicked {
  animation: clickedOn 0.5s;
}

@keyframes clickedOn {
  from {
    transform: scale(0.9);
  }
  to {
    transform: scale(1);
  }
}
